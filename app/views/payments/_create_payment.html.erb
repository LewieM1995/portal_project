<!-- app/views/payments/new.html.erb -->
<h1>Make a Payment</h1>

<%= form_tag create_payment_path, method: :post do %>
  <!-- Add your payment details input fields here -->
  <%= hidden_field_tag :amount, '10.00' %>
  <%= hidden_field_tag :currency, 'USD' %>
  <%= hidden_field_tag :description, 'Product Purchase' %>

  <!-- div to render the PayPal button -->
  <div id="paypal-button-container"></div>
  <div id="checkout-form">
    <div id="card-name-field-container"></div>
    <div id="card-number-field-container"></div>
    <div id="card-expiry-field-container"></div>
    <div id="card-cvv-field-container"></div>
  </div>

  <!-- Script to render the PayPal button -->
  <script>
    paypal.Buttons({
      createOrder: function(data, actions) {
        return actions.order.create({
          purchase_units: [{
            amount: {
              value: '<%= params[:amount] %>',
              currency_code: '<%= params[:currency] %>'
            },
            description: '<%= params[:description] %>'
          }]
        });
      },
      onApprove: function(data, actions) {
        return actions.order.capture().then(function(details) {
          // Handle successful payment execution
          alert('Payment successful! Transaction ID: ' + details.id);
        });
      }
    }).render('#paypal-button-container');
    console.log('Amount:', '<%= params[:amount] %>');
    console.log('Currency:', '<%= params[:currency] %>');
    console.log('Description:', '<%= params[:description] %>');

    // Create the Card Fields Component and define callbacks
const cardField = paypal.CardFields({
    createOrder: function (data) {
      return fetch("myserver.com/api/orders", {
        method: "POST",
        body: {
          paymentSource: data.paymentSource,
        },
      })
        .then((res) => {
          return res.json();
        })
        .then((orderData) => {
          return orderData.id;
        });
    },
    onApprove: function (data) {
      const { orderID } = data;
      return fetch(`myserver.com/api/orders/${orderID}/capture`, {
        method: "POST",
      })
        .then((res) => {
          return res.json();
        })
        .then((orderData) => {
          // Redirect to success page
        });
    },
    onError: function (error) {
      // Do something with the error from the SDK
    },
  });
  // Render each field after checking for eligibility
  if (cardField.isEligible()) {
    const nameField = cardField.NameField();
    nameField.render("#card-name-field-container");
  
    const numberField = cardField.NumberField();
    numberField.render("#card-number-field-container");
  
    const cvvField = cardField.CVVField();
    cvvField.render("#card-cvv-field-container");
  
    const expiryField = cardField.ExpiryField();
    expiryField.render("#card-expiry-field-container");
  
    // Add click listener to submit button and call the submit function on the CardField component
    document
      .getElementById("card-field-submit-button")
      .addEventListener("click", () => {
        cardField.submit().then(() => {
          // submit successful
        });
      });
  }

  </script>
<% end %>
